{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\xinc\\\\simple_directory\\\\movie-backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xinc\\\\simple_directory\\\\movie-backend\",\"filename\":\"D:\\\\xinc\\\\simple_directory\\\\movie-backend\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xinc\\\\simple_directory\\\\movie-backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.1:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\nvar _expressRateLimit = require(\"express-rate-limit\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; } /* eslint-disable import/no-import-module-exports */\nvar app = (0, _express[\"default\"])();\nvar PORT = process.env.PORT || 5000;\nvar API_KEY = '71f6d6491ccd8a70c189ecc6dc85548b';\nvar CACHE_DURATION = 60; // Cache duration in seconds\nvar cache = {}; // In-memory cache\n\nvar limiter = (0, _expressRateLimit.rateLimit)({\n  windowMs: 1000,\n  // 1 second\n  max: 1000 // Maximum 1000 requests per second\n});\n\napp.use(limiter);\napp.use(_express[\"default\"].json());\n\n// Connect to MongoDB\n_mongoose[\"default\"].connect('mongodb://localhost:27017/watchlist', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n// Define Movie Schema\nvar movieSchema = new _mongoose[\"default\"].Schema({\n  movieId: {\n    type: Number,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  posterPath: {\n    type: String,\n    required: true\n  },\n  releaseDate: {\n    type: Date,\n    required: true\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  },\n  updatedAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n});\n\n// Create Movie model\nvar Movie = _mongoose[\"default\"].model('Movie', movieSchema);\napp.get('/', function (req, res) {\n  res.send('Hello from the server!');\n});\n\n// /movies get request to get a paginated, sortable list of movie objects\n\napp.get('/movies', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    var _req$query, _req$query$cursor, cursor, _req$query$count, count, _req$query$sort, sort, query, cacheKey, startIndex, endIndex, queryParams, cachedData;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _req$query = req.query, _req$query$cursor = _req$query.cursor, cursor = _req$query$cursor === void 0 ? 1 : _req$query$cursor, _req$query$count = _req$query.count, count = _req$query$count === void 0 ? 20 : _req$query$count, _req$query$sort = _req$query.sort, sort = _req$query$sort === void 0 ? 'popularity.desc' : _req$query$sort, query = _req$query.query; // Validate and sanitize input\n          cursor = parseInt(cursor, 10);\n          count = parseInt(count, 10);\n\n          // Generate a cache key based on the query parameters\n          cacheKey = \"\".concat(cursor, \"_\").concat(count, \"_\").concat(sort, \"_\").concat(query); // Adjust cursor and count to retrieve the desired subset\n          startIndex = (cursor - 1) * count;\n          endIndex = cursor * count;\n          queryParams = {\n            api_key: API_KEY,\n            page: cursor,\n            sort_by: sort,\n            include_adult: false,\n            include_video: false\n          };\n          if (query) {\n            queryParams.query = query;\n          }\n          if (!(cache[cacheKey] && cache[cacheKey].expiry > Date.now())) {\n            _context.next = 13;\n            break;\n          }\n          cachedData = cache[cacheKey].data;\n          res.json(cachedData);\n          _context.next = 15;\n          break;\n        case 13:\n          _context.next = 15;\n          return _axios[\"default\"].get('https://api.themoviedb.org/3/discover/movie', {\n            params: queryParams\n          }).then(function (response) {\n            var movies = response.data.results.slice(startIndex, endIndex).map(function (movie) {\n              return {\n                id: movie.id,\n                title: movie.title,\n                poster_path: movie.poster_path,\n                release_date: movie.release_date,\n                vote_average: movie.vote_average\n              };\n            });\n\n            // Save the data to the cache\n            cache[cacheKey] = {\n              data: movies,\n              expiry: Date.now() + CACHE_DURATION * 1000\n            };\n            res.json(movies);\n          })[\"catch\"](function (error) {\n            console.error(error);\n            res.status(500).json({\n              error: 'Internal Server Error'\n            });\n          });\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\n//  /movies/:id get request to show the details of the full movie object\n\napp.get('/movies/:id', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    var movieId, cachedData;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          movieId = req.params.id; // Check if the movie details are already cached\n          if (!(cache[movieId] && cache[movieId].expiry > Date.now())) {\n            _context2.next = 6;\n            break;\n          }\n          cachedData = cache[movieId].data;\n          res.json(cachedData);\n          _context2.next = 8;\n          break;\n        case 6:\n          _context2.next = 8;\n          return _axios[\"default\"].get(\"https://api.themoviedb.org/3/movie/\".concat(movieId), {\n            params: {\n              api_key: API_KEY\n            }\n          }).then(function (response) {\n            var movie = response.data;\n            // Cache the movie details\n            cache[movieId] = {\n              data: movie,\n              expiry: Date.now() + CACHE_DURATION * 1000\n            };\n            res.json(movie);\n          })[\"catch\"](function (error) {\n            console.error(error);\n            res.status(500).json({\n              error: 'Internal Server Error'\n            });\n          });\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\n// Watchlist CRUD - Store the movies added to watchlist into MongoDB\n\n// GET /watchlist\napp.get('/watchlist', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return Movie.find().sort({\n            createdAt: -1\n          })\n          // eslint-disable-next-line consistent-return\n          .exec(function (err, movies) {\n            if (err) {\n              console.error(err);\n              return res.status(500).json({\n                error: 'Internal Server Error'\n              });\n            }\n            res.json(movies);\n          });\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n\n// POST /watchlist\napp.post('/watchlist', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var _req$body, movieId, title, posterPath, releaseDate, movie;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _req$body = req.body, movieId = _req$body.movieId, title = _req$body.title, posterPath = _req$body.posterPath, releaseDate = _req$body.releaseDate;\n          movie = new Movie({\n            movieId: movieId,\n            title: title,\n            posterPath: posterPath,\n            releaseDate: releaseDate\n          }); // eslint-disable-next-line consistent-return\n          _context4.next = 4;\n          return movie.save(function (err, savedMovie) {\n            if (err) {\n              console.error(err);\n              return res.status(500).json({\n                error: 'Internal Server Error'\n              });\n            }\n            res.json(savedMovie);\n          });\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\n\n// PUT /watchlist/:id\napp.put('/watchlist/:id', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var movieId, _req$body2, title, posterPath, releaseDate;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          movieId = req.params.id;\n          _req$body2 = req.body, title = _req$body2.title, posterPath = _req$body2.posterPath, releaseDate = _req$body2.releaseDate;\n          Movie.findOneAndUpdate({\n            movieId: movieId\n          }, {\n            title: title,\n            posterPath: posterPath,\n            releaseDate: releaseDate,\n            updatedAt: Date.now()\n          }, {\n            \"new\": true\n          },\n          // eslint-disable-next-line consistent-return\n          function (err, updatedMovie) {\n            if (err) {\n              console.error(err);\n              return res.status(500).json({\n                error: 'Internal Server Error'\n              });\n            }\n            if (!updatedMovie) {\n              return res.status(404).json({\n                error: 'Movie not found'\n              });\n            }\n            res.json(updatedMovie);\n          });\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\n\n// DELETE /watchlist/:id\napp[\"delete\"]('/watchlist/:id', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    var movieId;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          movieId = req.params.id; // eslint-disable-next-line consistent-return\n          Movie.findOneAndDelete({\n            movieId: movieId\n          }, function (err, deletedMovie) {\n            if (err) {\n              console.error(err);\n              return res.status(500).json({\n                error: 'Internal Server Error'\n              });\n            }\n            if (!deletedMovie) {\n              return res.status(404).json({\n                error: 'Movie not found'\n              });\n            }\n            res.json({\n              message: 'Movie deleted successfully'\n            });\n          });\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nvar server = app.listen(PORT, function () {\n  var host = server.address().address;\n  var _server$address = server.address(),\n    port = _server$address.port;\n  console.log('App listening at http://%s:%s', host, port);\n});\nmodule.exports = server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2F4aW9zIiwiX21vbmdvb3NlIiwiX2V4cHJlc3NSYXRlTGltaXQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsImV4cG9ydHMiLCJPcCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093biIsImhhc093blByb3BlcnR5IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJkZXNjIiwidmFsdWUiLCIkU3ltYm9sIiwiU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJpdGVyYXRvciIsImFzeW5jSXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwidG9TdHJpbmdUYWdTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImVyciIsIndyYXAiLCJpbm5lckZuIiwib3V0ZXJGbiIsInNlbGYiLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiY3JlYXRlIiwiY29udGV4dCIsIkNvbnRleHQiLCJtYWtlSW52b2tlTWV0aG9kIiwidHJ5Q2F0Y2giLCJmbiIsImFyZyIsInR5cGUiLCJjYWxsIiwiQ29udGludWVTZW50aW5lbCIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJJdGVyYXRvclByb3RvdHlwZSIsImdldFByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJOYXRpdmVJdGVyYXRvclByb3RvdHlwZSIsInZhbHVlcyIsIkdwIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiZm9yRWFjaCIsIm1ldGhvZCIsIl9pbnZva2UiLCJBc3luY0l0ZXJhdG9yIiwiUHJvbWlzZUltcGwiLCJpbnZva2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVjb3JkIiwicmVzdWx0IiwiX3R5cGVvZiIsIl9fYXdhaXQiLCJ0aGVuIiwidW53cmFwcGVkIiwiZXJyb3IiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsInN0YXRlIiwiRXJyb3IiLCJkb25lUmVzdWx0IiwiZGVsZWdhdGUiLCJkZWxlZ2F0ZVJlc3VsdCIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsImRvbmUiLCJtZXRob2ROYW1lIiwidW5kZWZpbmVkIiwiVHlwZUVycm9yIiwiaW5mbyIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJlbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXRlcmFibGUiLCJpdGVyYXRvck1ldGhvZCIsImlzTmFOIiwibGVuZ3RoIiwiaSIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImdlbkZ1biIsImN0b3IiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsIml0ZXIiLCJrZXlzIiwidmFsIiwib2JqZWN0IiwicmV2ZXJzZSIsInBvcCIsInNraXBUZW1wUmVzZXQiLCJwcmV2IiwiY2hhckF0Iiwic2xpY2UiLCJzdG9wIiwicm9vdFJlY29yZCIsInJ2YWwiLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJmaW5hbGx5RW50cnkiLCJjb21wbGV0ZSIsImZpbmlzaCIsIl9jYXRjaCIsInRocm93biIsImRlbGVnYXRlWWllbGQiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJfbmV4dCIsIl90aHJvdyIsIl9hc3luY1RvR2VuZXJhdG9yIiwiYXJncyIsImFyZ3VtZW50cyIsImFwcGx5IiwiYXBwIiwiZXhwcmVzcyIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwiQVBJX0tFWSIsIkNBQ0hFX0RVUkFUSU9OIiwiY2FjaGUiLCJsaW1pdGVyIiwicmF0ZUxpbWl0Iiwid2luZG93TXMiLCJtYXgiLCJ1c2UiLCJqc29uIiwibW9uZ29vc2UiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwibW92aWVTY2hlbWEiLCJTY2hlbWEiLCJtb3ZpZUlkIiwiTnVtYmVyIiwicmVxdWlyZWQiLCJ0aXRsZSIsIlN0cmluZyIsInBvc3RlclBhdGgiLCJyZWxlYXNlRGF0ZSIsIkRhdGUiLCJjcmVhdGVkQXQiLCJub3ciLCJ1cGRhdGVkQXQiLCJNb3ZpZSIsIm1vZGVsIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsIl9yZWYiLCJfY2FsbGVlIiwiX3JlcSRxdWVyeSIsIl9yZXEkcXVlcnkkY3Vyc29yIiwiY3Vyc29yIiwiX3JlcSRxdWVyeSRjb3VudCIsImNvdW50IiwiX3JlcSRxdWVyeSRzb3J0Iiwic29ydCIsInF1ZXJ5IiwiY2FjaGVLZXkiLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJxdWVyeVBhcmFtcyIsImNhY2hlZERhdGEiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicGFyc2VJbnQiLCJjb25jYXQiLCJhcGlfa2V5IiwicGFnZSIsInNvcnRfYnkiLCJpbmNsdWRlX2FkdWx0IiwiaW5jbHVkZV92aWRlbyIsImV4cGlyeSIsImRhdGEiLCJheGlvcyIsInBhcmFtcyIsInJlc3BvbnNlIiwibW92aWVzIiwicmVzdWx0cyIsIm1hcCIsIm1vdmllIiwiaWQiLCJwb3N0ZXJfcGF0aCIsInJlbGVhc2VfZGF0ZSIsInZvdGVfYXZlcmFnZSIsImNvbnNvbGUiLCJzdGF0dXMiLCJfeCIsIl94MiIsIl9yZWYyIiwiX2NhbGxlZTIiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJfeDMiLCJfeDQiLCJfcmVmMyIsIl9jYWxsZWUzIiwiX2NhbGxlZTMkIiwiX2NvbnRleHQzIiwiZmluZCIsImV4ZWMiLCJfeDUiLCJfeDYiLCJwb3N0IiwiX3JlZjQiLCJfY2FsbGVlNCIsIl9yZXEkYm9keSIsIl9jYWxsZWU0JCIsIl9jb250ZXh0NCIsImJvZHkiLCJzYXZlIiwic2F2ZWRNb3ZpZSIsIl94NyIsIl94OCIsInB1dCIsIl9yZWY1IiwiX2NhbGxlZTUiLCJfcmVxJGJvZHkyIiwiX2NhbGxlZTUkIiwiX2NvbnRleHQ1IiwiZmluZE9uZUFuZFVwZGF0ZSIsInVwZGF0ZWRNb3ZpZSIsIl94OSIsIl94MTAiLCJfcmVmNiIsIl9jYWxsZWU2IiwiX2NhbGxlZTYkIiwiX2NvbnRleHQ2IiwiZmluZE9uZUFuZERlbGV0ZSIsImRlbGV0ZWRNb3ZpZSIsIm1lc3NhZ2UiLCJfeDExIiwiX3gxMiIsInNlcnZlciIsImxpc3RlbiIsImhvc3QiLCJhZGRyZXNzIiwiX3NlcnZlciRhZGRyZXNzIiwicG9ydCIsImxvZyIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiRDpcXHhpbmNcXHNpbXBsZV9kaXJlY3RvcnlcXG1vdmllLWJhY2tlbmRcXCIsInNvdXJjZXMiOlsic2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9uby1pbXBvcnQtbW9kdWxlLWV4cG9ydHMgKi9cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgeyByYXRlTGltaXQgfSBmcm9tICdleHByZXNzLXJhdGUtbGltaXQnO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xuY29uc3QgQVBJX0tFWSA9ICc3MWY2ZDY0OTFjY2Q4YTcwYzE4OWVjYzZkYzg1NTQ4Yic7XG5jb25zdCBDQUNIRV9EVVJBVElPTiA9IDYwOyAvLyBDYWNoZSBkdXJhdGlvbiBpbiBzZWNvbmRzXG5jb25zdCBjYWNoZSA9IHt9OyAvLyBJbi1tZW1vcnkgY2FjaGVcblxuY29uc3QgbGltaXRlciA9IHJhdGVMaW1pdCh7XG4gIHdpbmRvd01zOiAxMDAwLCAvLyAxIHNlY29uZFxuICBtYXg6IDEwMDAsIC8vIE1heGltdW0gMTAwMCByZXF1ZXN0cyBwZXIgc2Vjb25kXG59KTtcblxuYXBwLnVzZShsaW1pdGVyKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuXG4vLyBDb25uZWN0IHRvIE1vbmdvREJcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvd2F0Y2hsaXN0Jywge1xuICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXG4gIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbn0pO1xuXG4vLyBEZWZpbmUgTW92aWUgU2NoZW1hXG5jb25zdCBtb3ZpZVNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBtb3ZpZUlkOiB7IHR5cGU6IE51bWJlciwgcmVxdWlyZWQ6IHRydWUgfSxcbiAgdGl0bGU6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuICBwb3N0ZXJQYXRoOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcbiAgcmVsZWFzZURhdGU6IHsgdHlwZTogRGF0ZSwgcmVxdWlyZWQ6IHRydWUgfSxcbiAgY3JlYXRlZEF0OiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXG4gIHVwZGF0ZWRBdDogeyB0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vdyB9LFxufSk7XG5cbi8vIENyZWF0ZSBNb3ZpZSBtb2RlbFxuY29uc3QgTW92aWUgPSBtb25nb29zZS5tb2RlbCgnTW92aWUnLCBtb3ZpZVNjaGVtYSk7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoJ0hlbGxvIGZyb20gdGhlIHNlcnZlciEnKTtcbn0pO1xuXG4vLyAvbW92aWVzIGdldCByZXF1ZXN0IHRvIGdldCBhIHBhZ2luYXRlZCwgc29ydGFibGUgbGlzdCBvZiBtb3ZpZSBvYmplY3RzXG5cbmFwcC5nZXQoJy9tb3ZpZXMnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgbGV0IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWNvbnN0XG4gICAgY3Vyc29yID0gMSwgY291bnQgPSAyMCwgc29ydCA9ICdwb3B1bGFyaXR5LmRlc2MnLCBxdWVyeVxuICB9ID0gcmVxLnF1ZXJ5O1xuXG4gIC8vIFZhbGlkYXRlIGFuZCBzYW5pdGl6ZSBpbnB1dFxuICBjdXJzb3IgPSBwYXJzZUludChjdXJzb3IsIDEwKTtcbiAgY291bnQgPSBwYXJzZUludChjb3VudCwgMTApO1xuXG4gIC8vIEdlbmVyYXRlIGEgY2FjaGUga2V5IGJhc2VkIG9uIHRoZSBxdWVyeSBwYXJhbWV0ZXJzXG4gIGNvbnN0IGNhY2hlS2V5ID0gYCR7Y3Vyc29yfV8ke2NvdW50fV8ke3NvcnR9XyR7cXVlcnl9YDtcblxuICAvLyBBZGp1c3QgY3Vyc29yIGFuZCBjb3VudCB0byByZXRyaWV2ZSB0aGUgZGVzaXJlZCBzdWJzZXRcbiAgY29uc3Qgc3RhcnRJbmRleCA9IChjdXJzb3IgLSAxKSAqIGNvdW50O1xuICBjb25zdCBlbmRJbmRleCA9IGN1cnNvciAqIGNvdW50O1xuXG4gIGNvbnN0IHF1ZXJ5UGFyYW1zID0ge1xuICAgIGFwaV9rZXk6IEFQSV9LRVksXG4gICAgcGFnZTogY3Vyc29yLFxuICAgIHNvcnRfYnk6IHNvcnQsXG4gICAgaW5jbHVkZV9hZHVsdDogZmFsc2UsXG4gICAgaW5jbHVkZV92aWRlbzogZmFsc2VcbiAgfTtcblxuICBpZiAocXVlcnkpIHtcbiAgICBxdWVyeVBhcmFtcy5xdWVyeSA9IHF1ZXJ5O1xuICB9XG5cbiAgaWYgKGNhY2hlW2NhY2hlS2V5XSAmJiBjYWNoZVtjYWNoZUtleV0uZXhwaXJ5ID4gRGF0ZS5ub3coKSkge1xuICAgIGNvbnN0IGNhY2hlZERhdGEgPSBjYWNoZVtjYWNoZUtleV0uZGF0YTtcbiAgICByZXMuanNvbihjYWNoZWREYXRhKTtcbiAgfSBlbHNlIHtcbiAgICBhd2FpdCBheGlvc1xuICAgICAgLmdldCgnaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy9kaXNjb3Zlci9tb3ZpZScsIHsgcGFyYW1zOiBxdWVyeVBhcmFtcyB9KVxuICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgIGNvbnN0IG1vdmllcyA9IHJlc3BvbnNlLmRhdGEucmVzdWx0cy5zbGljZShzdGFydEluZGV4LCBlbmRJbmRleCkubWFwKChtb3ZpZSkgPT4gKHtcbiAgICAgICAgICBpZDogbW92aWUuaWQsXG4gICAgICAgICAgdGl0bGU6IG1vdmllLnRpdGxlLFxuICAgICAgICAgIHBvc3Rlcl9wYXRoOiBtb3ZpZS5wb3N0ZXJfcGF0aCxcbiAgICAgICAgICByZWxlYXNlX2RhdGU6IG1vdmllLnJlbGVhc2VfZGF0ZSxcbiAgICAgICAgICB2b3RlX2F2ZXJhZ2U6IG1vdmllLnZvdGVfYXZlcmFnZVxuICAgICAgICB9KSk7XG5cbiAgICAgICAgLy8gU2F2ZSB0aGUgZGF0YSB0byB0aGUgY2FjaGVcbiAgICAgICAgY2FjaGVbY2FjaGVLZXldID0ge1xuICAgICAgICAgIGRhdGE6IG1vdmllcyxcbiAgICAgICAgICBleHBpcnk6IERhdGUubm93KCkgKyBDQUNIRV9EVVJBVElPTiAqIDEwMDAsXG4gICAgICAgIH07XG5cbiAgICAgICAgcmVzLmpzb24obW92aWVzKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyB9KTtcbiAgICAgIH0pO1xuICB9XG59KTtcblxuLy8gIC9tb3ZpZXMvOmlkIGdldCByZXF1ZXN0IHRvIHNob3cgdGhlIGRldGFpbHMgb2YgdGhlIGZ1bGwgbW92aWUgb2JqZWN0XG5cbmFwcC5nZXQoJy9tb3ZpZXMvOmlkJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IG1vdmllSWQgPSByZXEucGFyYW1zLmlkO1xuXG4gIC8vIENoZWNrIGlmIHRoZSBtb3ZpZSBkZXRhaWxzIGFyZSBhbHJlYWR5IGNhY2hlZFxuICBpZiAoY2FjaGVbbW92aWVJZF0gJiYgY2FjaGVbbW92aWVJZF0uZXhwaXJ5ID4gRGF0ZS5ub3coKSkge1xuICAgIGNvbnN0IGNhY2hlZERhdGEgPSBjYWNoZVttb3ZpZUlkXS5kYXRhO1xuICAgIHJlcy5qc29uKGNhY2hlZERhdGEpO1xuICB9IGVsc2Uge1xuICAgIGF3YWl0IGF4aW9zXG4gICAgICAuZ2V0KGBodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL21vdmllLyR7bW92aWVJZH1gLCB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIGFwaV9rZXk6IEFQSV9LRVlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICBjb25zdCBtb3ZpZSA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIC8vIENhY2hlIHRoZSBtb3ZpZSBkZXRhaWxzXG4gICAgICAgIGNhY2hlW21vdmllSWRdID0ge1xuICAgICAgICAgIGRhdGE6IG1vdmllLFxuICAgICAgICAgIGV4cGlyeTogRGF0ZS5ub3coKSArIENBQ0hFX0RVUkFUSU9OICogMTAwMCxcbiAgICAgICAgfTtcbiAgICAgICAgcmVzLmpzb24obW92aWUpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InIH0pO1xuICAgICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBXYXRjaGxpc3QgQ1JVRCAtIFN0b3JlIHRoZSBtb3ZpZXMgYWRkZWQgdG8gd2F0Y2hsaXN0IGludG8gTW9uZ29EQlxuXG4vLyBHRVQgL3dhdGNobGlzdFxuYXBwLmdldCgnL3dhdGNobGlzdCcsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBhd2FpdCBNb3ZpZS5maW5kKClcbiAgICAuc29ydCh7IGNyZWF0ZWRBdDogLTEgfSlcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgICAuZXhlYygoZXJyLCBtb3ZpZXMpID0+IHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicgfSk7XG4gICAgICB9XG4gICAgICByZXMuanNvbihtb3ZpZXMpO1xuICAgIH0pO1xufSk7XG5cbi8vIFBPU1QgL3dhdGNobGlzdFxuYXBwLnBvc3QoJy93YXRjaGxpc3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge1xuICAgIG1vdmllSWQsIHRpdGxlLCBwb3N0ZXJQYXRoLCByZWxlYXNlRGF0ZVxuICB9ID0gcmVxLmJvZHk7XG5cbiAgY29uc3QgbW92aWUgPSBuZXcgTW92aWUoe1xuICAgIG1vdmllSWQsXG4gICAgdGl0bGUsXG4gICAgcG9zdGVyUGF0aCxcbiAgICByZWxlYXNlRGF0ZSxcbiAgfSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGF3YWl0IG1vdmllLnNhdmUoKGVyciwgc2F2ZWRNb3ZpZSkgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyB9KTtcbiAgICB9XG4gICAgcmVzLmpzb24oc2F2ZWRNb3ZpZSk7XG4gIH0pO1xufSk7XG5cbi8vIFBVVCAvd2F0Y2hsaXN0LzppZFxuYXBwLnB1dCgnL3dhdGNobGlzdC86aWQnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgbW92aWVJZCA9IHJlcS5wYXJhbXMuaWQ7XG4gIGNvbnN0IHsgdGl0bGUsIHBvc3RlclBhdGgsIHJlbGVhc2VEYXRlIH0gPSByZXEuYm9keTtcblxuICBNb3ZpZS5maW5kT25lQW5kVXBkYXRlKFxuICAgIHsgbW92aWVJZCB9LFxuICAgIHtcbiAgICAgIHRpdGxlLCBwb3N0ZXJQYXRoLCByZWxlYXNlRGF0ZSwgdXBkYXRlZEF0OiBEYXRlLm5vdygpXG4gICAgfSxcbiAgICB7IG5ldzogdHJ1ZSB9LFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICAgIChlcnIsIHVwZGF0ZWRNb3ZpZSkgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyB9KTtcbiAgICAgIH1cbiAgICAgIGlmICghdXBkYXRlZE1vdmllKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiAnTW92aWUgbm90IGZvdW5kJyB9KTtcbiAgICAgIH1cbiAgICAgIHJlcy5qc29uKHVwZGF0ZWRNb3ZpZSk7XG4gICAgfVxuICApO1xufSk7XG5cbi8vIERFTEVURSAvd2F0Y2hsaXN0LzppZFxuYXBwLmRlbGV0ZSgnL3dhdGNobGlzdC86aWQnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgbW92aWVJZCA9IHJlcS5wYXJhbXMuaWQ7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIE1vdmllLmZpbmRPbmVBbmREZWxldGUoeyBtb3ZpZUlkIH0sIChlcnIsIGRlbGV0ZWRNb3ZpZSkgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyB9KTtcbiAgICB9XG4gICAgaWYgKCFkZWxldGVkTW92aWUpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiAnTW92aWUgbm90IGZvdW5kJyB9KTtcbiAgICB9XG4gICAgcmVzLmpzb24oeyBtZXNzYWdlOiAnTW92aWUgZGVsZXRlZCBzdWNjZXNzZnVsbHknIH0pO1xuICB9KTtcbn0pO1xuXG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgY29uc3QgaG9zdCA9IHNlcnZlci5hZGRyZXNzKCkuYWRkcmVzcztcbiAgY29uc3QgeyBwb3J0IH0gPSBzZXJ2ZXIuYWRkcmVzcygpO1xuXG4gIGNvbnNvbGUubG9nKCdBcHAgbGlzdGVuaW5nIGF0IGh0dHA6Ly8lczolcycsIGhvc3QsIHBvcnQpO1xufSk7XG5tb2R1bGUuZXhwb3J0cyA9IHNlcnZlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsSUFBQUEsUUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsU0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsaUJBQUEsR0FBQUgsT0FBQTtBQUErQyxTQUFBRCx1QkFBQUssR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLGdCQUFBQSxHQUFBO0FBQUEsU0FBQUUsb0JBQUEsa0JBSC9DLHFKQUFBQSxtQkFBQSxZQUFBQSxvQkFBQSxXQUFBQyxPQUFBLFNBQUFBLE9BQUEsT0FBQUMsRUFBQSxHQUFBQyxNQUFBLENBQUFDLFNBQUEsRUFBQUMsTUFBQSxHQUFBSCxFQUFBLENBQUFJLGNBQUEsRUFBQUMsY0FBQSxHQUFBSixNQUFBLENBQUFJLGNBQUEsY0FBQVQsR0FBQSxFQUFBVSxH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","map":{"version":3,"names":["_express","_interopRequireDefault","require","_axios","_mongoose","_expressRateLimit","obj","__esModule","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","app","express","PORT","process","env","API_KEY","CACHE_DURATION","cache","limiter","rateLimit","windowMs","max","use","json","mongoose","connect","useNewUrlParser","useUnifiedTopology","movieSchema","Schema","movieId","Number","required","title","String","posterPath","releaseDate","Date","createdAt","now","updatedAt","Movie","model","get","req","res","send","_ref","_callee","_req$query","_req$query$cursor","cursor","_req$query$count","count","_req$query$sort","sort","query","cacheKey","startIndex","endIndex","queryParams","cachedData","_callee$","_context","parseInt","concat","api_key","page","sort_by","include_adult","include_video","expiry","data","axios","params","response","movies","results","map","movie","id","poster_path","release_date","vote_average","console","status","_x","_x2","_ref2","_callee2","_callee2$","_context2","_x3","_x4","_ref3","_callee3","_callee3$","_context3","find","exec","_x5","_x6","post","_ref4","_callee4","_req$body","_callee4$","_context4","body","save","savedMovie","_x7","_x8","put","_ref5","_callee5","_req$body2","_callee5$","_context5","findOneAndUpdate","updatedMovie","_x9","_x10","_ref6","_callee6","_callee6$","_context6","findOneAndDelete","deletedMovie","message","_x11","_x12","server","listen","host","address","_server$address","port","log","module"],"sourceRoot":"D:\\xinc\\simple_directory\\movie-backend\\","sources":["server.js"],"sourcesContent":["/* eslint-disable import/no-import-module-exports */\nimport express from 'express';\nimport axios from 'axios';\nimport mongoose from 'mongoose';\nimport { rateLimit } from 'express-rate-limit';\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\nconst API_KEY = '71f6d6491ccd8a70c189ecc6dc85548b';\nconst CACHE_DURATION = 60; // Cache duration in seconds\nconst cache = {}; // In-memory cache\n\nconst limiter = rateLimit({\n  windowMs: 1000, // 1 second\n  max: 1000, // Maximum 1000 requests per second\n});\n\napp.use(limiter);\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect('mongodb://localhost:27017/watchlist', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\n\n// Define Movie Schema\nconst movieSchema = new mongoose.Schema({\n  movieId: { type: Number, required: true },\n  title: { type: String, required: true },\n  posterPath: { type: String, required: true },\n  releaseDate: { type: Date, required: true },\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now },\n});\n\n// Create Movie model\nconst Movie = mongoose.model('Movie', movieSchema);\n\napp.get('/', (req, res) => {\n  res.send('Hello from the server!');\n});\n\n// /movies get request to get a paginated, sortable list of movie objects\n\napp.get('/movies', async (req, res) => {\n  let {\n    // eslint-disable-next-line prefer-const\n    cursor = 1, count = 20, sort = 'popularity.desc', query\n  } = req.query;\n\n  // Validate and sanitize input\n  cursor = parseInt(cursor, 10);\n  count = parseInt(count, 10);\n\n  // Generate a cache key based on the query parameters\n  const cacheKey = `${cursor}_${count}_${sort}_${query}`;\n\n  // Adjust cursor and count to retrieve the desired subset\n  const startIndex = (cursor - 1) * count;\n  const endIndex = cursor * count;\n\n  const queryParams = {\n    api_key: API_KEY,\n    page: cursor,\n    sort_by: sort,\n    include_adult: false,\n    include_video: false\n  };\n\n  if (query) {\n    queryParams.query = query;\n  }\n\n  if (cache[cacheKey] && cache[cacheKey].expiry > Date.now()) {\n    const cachedData = cache[cacheKey].data;\n    res.json(cachedData);\n  } else {\n    await axios\n      .get('https://api.themoviedb.org/3/discover/movie', { params: queryParams })\n      .then((response) => {\n        const movies = response.data.results.slice(startIndex, endIndex).map((movie) => ({\n          id: movie.id,\n          title: movie.title,\n          poster_path: movie.poster_path,\n          release_date: movie.release_date,\n          vote_average: movie.vote_average\n        }));\n\n        // Save the data to the cache\n        cache[cacheKey] = {\n          data: movies,\n          expiry: Date.now() + CACHE_DURATION * 1000,\n        };\n\n        res.json(movies);\n      })\n      .catch((error) => {\n        console.error(error);\n        res.status(500).json({ error: 'Internal Server Error' });\n      });\n  }\n});\n\n//  /movies/:id get request to show the details of the full movie object\n\napp.get('/movies/:id', async (req, res) => {\n  const movieId = req.params.id;\n\n  // Check if the movie details are already cached\n  if (cache[movieId] && cache[movieId].expiry > Date.now()) {\n    const cachedData = cache[movieId].data;\n    res.json(cachedData);\n  } else {\n    await axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}`, {\n        params: {\n          api_key: API_KEY\n        }\n      })\n      .then((response) => {\n        const movie = response.data;\n        // Cache the movie details\n        cache[movieId] = {\n          data: movie,\n          expiry: Date.now() + CACHE_DURATION * 1000,\n        };\n        res.json(movie);\n      })\n      .catch((error) => {\n        console.error(error);\n        res.status(500).json({ error: 'Internal Server Error' });\n      });\n  }\n});\n\n// Watchlist CRUD - Store the movies added to watchlist into MongoDB\n\n// GET /watchlist\napp.get('/watchlist', async (req, res) => {\n  await Movie.find()\n    .sort({ createdAt: -1 })\n    // eslint-disable-next-line consistent-return\n    .exec((err, movies) => {\n      if (err) {\n        console.error(err);\n        return res.status(500).json({ error: 'Internal Server Error' });\n      }\n      res.json(movies);\n    });\n});\n\n// POST /watchlist\napp.post('/watchlist', async (req, res) => {\n  const {\n    movieId, title, posterPath, releaseDate\n  } = req.body;\n\n  const movie = new Movie({\n    movieId,\n    title,\n    posterPath,\n    releaseDate,\n  });\n\n  // eslint-disable-next-line consistent-return\n  await movie.save((err, savedMovie) => {\n    if (err) {\n      console.error(err);\n      return res.status(500).json({ error: 'Internal Server Error' });\n    }\n    res.json(savedMovie);\n  });\n});\n\n// PUT /watchlist/:id\napp.put('/watchlist/:id', async (req, res) => {\n  const movieId = req.params.id;\n  const { title, posterPath, releaseDate } = req.body;\n\n  Movie.findOneAndUpdate(\n    { movieId },\n    {\n      title, posterPath, releaseDate, updatedAt: Date.now()\n    },\n    { new: true },\n    // eslint-disable-next-line consistent-return\n    (err, updatedMovie) => {\n      if (err) {\n        console.error(err);\n        return res.status(500).json({ error: 'Internal Server Error' });\n      }\n      if (!updatedMovie) {\n        return res.status(404).json({ error: 'Movie not found' });\n      }\n      res.json(updatedMovie);\n    }\n  );\n});\n\n// DELETE /watchlist/:id\napp.delete('/watchlist/:id', async (req, res) => {\n  const movieId = req.params.id;\n\n  // eslint-disable-next-line consistent-return\n  Movie.findOneAndDelete({ movieId }, (err, deletedMovie) => {\n    if (err) {\n      console.error(err);\n      return res.status(500).json({ error: 'Internal Server Error' });\n    }\n    if (!deletedMovie) {\n      return res.status(404).json({ error: 'Movie not found' });\n    }\n    res.json({ message: 'Movie deleted successfully' });\n  });\n});\n\nconst server = app.listen(PORT, () => {\n  const host = server.address().address;\n  const { port } = server.address();\n\n  console.log('App listening at http://%s:%s', host, port);\n});\nmodule.exports = server;\n"],"mappings":";;;AACA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,iBAAA,GAAAH,OAAA;AAA+C,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,oBAAA,kBAH/C,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,MAAA,GAAAH,EAAA,CAAAI,cAAA,EAAAC,cAAA,GAAAJ,MAAA,CAAAI,cAAA,cAAAT,GAAA,EAAAU,GAAA,EAAAC,IAAA,IAAAX,GAAA,CAAAU,GAAA,IAAAC,IAAA,CAAAC,KAAA,KAAAC,OAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,cAAA,GAAAF,OAAA,CAAAG,QAAA,kBAAAC,mBAAA,GAAAJ,OAAA,CAAAK,aAAA,uBAAAC,iBAAA,GAAAN,OAAA,CAAAO,WAAA,8BAAAC,OAAArB,GAAA,EAAAU,GAAA,EAAAE,KAAA,WAAAP,MAAA,CAAAI,cAAA,CAAAT,GAAA,EAAAU,GAAA,IAAAE,KAAA,EAAAA,KAAA,EAAAU,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAxB,GAAA,CAAAU,GAAA,WAAAW,MAAA,mBAAAI,GAAA,IAAAJ,MAAA,YAAAA,OAAArB,GAAA,EAAAU,GAAA,EAAAE,KAAA,WAAAZ,GAAA,CAAAU,GAAA,IAAAE,KAAA,gBAAAc,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,QAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAAtB,SAAA,YAAA0B,SAAA,GAAAJ,OAAA,GAAAI,SAAA,EAAAC,SAAA,GAAA5B,MAAA,CAAA6B,MAAA,CAAAH,cAAA,CAAAzB,SAAA,GAAA6B,OAAA,OAAAC,OAAA,CAAAN,WAAA,gBAAArB,cAAA,CAAAwB,SAAA,eAAArB,KAAA,EAAAyB,gBAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,MAAAF,SAAA,aAAAK,SAAAC,EAAA,EAAAvC,GAAA,EAAAwC,GAAA,mBAAAC,IAAA,YAAAD,GAAA,EAAAD,EAAA,CAAAG,IAAA,CAAA1C,GAAA,EAAAwC,GAAA,cAAAf,GAAA,aAAAgB,IAAA,WAAAD,GAAA,EAAAf,GAAA,QAAAtB,OAAA,CAAAuB,IAAA,GAAAA,IAAA,MAAAiB,gBAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,iBAAA,OAAAzB,MAAA,CAAAyB,iBAAA,EAAA/B,cAAA,qCAAAgC,QAAA,GAAA1C,MAAA,CAAA2C,cAAA,EAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAAG,MAAA,QAAAD,uBAAA,IAAAA,uBAAA,KAAA7C,EAAA,IAAAG,MAAA,CAAAmC,IAAA,CAAAO,uBAAA,EAAAlC,cAAA,MAAA+B,iBAAA,GAAAG,uBAAA,OAAAE,EAAA,GAAAN,0BAAA,CAAAvC,SAAA,GAAA0B,SAAA,CAAA1B,SAAA,GAAAD,MAAA,CAAA6B,MAAA,CAAAY,iBAAA,YAAAM,sBAAA9C,SAAA,gCAAA+C,OAAA,WAAAC,MAAA,IAAAjC,MAAA,CAAAf,SAAA,EAAAgD,MAAA,YAAAd,GAAA,gBAAAe,OAAA,CAAAD,MAAA,EAAAd,GAAA,sBAAAgB,cAAAvB,SAAA,EAAAwB,WAAA,aAAAC,OAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,QAAAC,MAAA,GAAAvB,QAAA,CAAAL,SAAA,CAAAqB,MAAA,GAAArB,SAAA,EAAAO,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,QAAAqB,MAAA,GAAAD,MAAA,CAAArB,GAAA,EAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA,SAAAA,KAAA,gBAAAmD,OAAA,CAAAnD,KAAA,KAAAL,MAAA,CAAAmC,IAAA,CAAA9B,KAAA,eAAA6C,WAAA,CAAAE,OAAA,CAAA/C,KAAA,CAAAoD,OAAA,EAAAC,IAAA,WAAArD,KAAA,IAAA8C,MAAA,SAAA9C,KAAA,EAAA+C,OAAA,EAAAC,MAAA,gBAAAnC,GAAA,IAAAiC,MAAA,UAAAjC,GAAA,EAAAkC,OAAA,EAAAC,MAAA,QAAAH,WAAA,CAAAE,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,WAAAC,SAAA,IAAAJ,MAAA,CAAAlD,KAAA,GAAAsD,SAAA,EAAAP,OAAA,CAAAG,MAAA,gBAAAK,KAAA,WAAAT,MAAA,UAAAS,KAAA,EAAAR,OAAA,EAAAC,MAAA,SAAAA,MAAA,CAAAC,MAAA,CAAArB,GAAA,SAAA4B,eAAA,EAAA3D,cAAA,oBAAAG,KAAA,WAAAA,MAAA0C,MAAA,EAAAd,GAAA,aAAA6B,2BAAA,eAAAZ,WAAA,WAAAE,OAAA,EAAAC,MAAA,IAAAF,MAAA,CAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,gBAAAQ,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAH,IAAA,CAAAI,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAhC,iBAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,QAAAmC,KAAA,sCAAAhB,MAAA,EAAAd,GAAA,wBAAA8B,KAAA,YAAAC,KAAA,sDAAAD,KAAA,oBAAAhB,MAAA,QAAAd,GAAA,SAAAgC,UAAA,WAAArC,OAAA,CAAAmB,MAAA,GAAAA,MAAA,EAAAnB,OAAA,CAAAK,GAAA,GAAAA,GAAA,UAAAiC,QAAA,GAAAtC,OAAA,CAAAsC,QAAA,MAAAA,QAAA,QAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,OAAAuC,cAAA,QAAAA,cAAA,KAAA/B,gBAAA,mBAAA+B,cAAA,qBAAAvC,OAAA,CAAAmB,MAAA,EAAAnB,OAAA,CAAAyC,IAAA,GAAAzC,OAAA,CAAA0C,KAAA,GAAA1C,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAmB,MAAA,6BAAAgB,KAAA,QAAAA,KAAA,gBAAAnC,OAAA,CAAAK,GAAA,EAAAL,OAAA,CAAA2C,iBAAA,CAAA3C,OAAA,CAAAK,GAAA,uBAAAL,OAAA,CAAAmB,MAAA,IAAAnB,OAAA,CAAA4C,MAAA,WAAA5C,OAAA,CAAAK,GAAA,GAAA8B,KAAA,oBAAAT,MAAA,GAAAvB,QAAA,CAAAX,OAAA,EAAAE,IAAA,EAAAM,OAAA,oBAAA0B,MAAA,CAAApB,IAAA,QAAA6B,KAAA,GAAAnC,OAAA,CAAA6C,IAAA,mCAAAnB,MAAA,CAAArB,GAAA,KAAAG,gBAAA,qBAAA/B,KAAA,EAAAiD,MAAA,CAAArB,GAAA,EAAAwC,IAAA,EAAA7C,OAAA,CAAA6C,IAAA,kBAAAnB,MAAA,CAAApB,IAAA,KAAA6B,KAAA,gBAAAnC,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,mBAAAmC,oBAAAF,QAAA,EAAAtC,OAAA,QAAA8C,UAAA,GAAA9C,OAAA,CAAAmB,MAAA,EAAAA,MAAA,GAAAmB,QAAA,CAAAzD,QAAA,CAAAiE,UAAA,OAAAC,SAAA,KAAA5B,MAAA,SAAAnB,OAAA,CAAAsC,QAAA,qBAAAQ,UAAA,IAAAR,QAAA,CAAAzD,QAAA,eAAAmB,OAAA,CAAAmB,MAAA,aAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,EAAAP,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,eAAAA,OAAA,CAAAmB,MAAA,kBAAA2B,UAAA,KAAA9C,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,uCAAAF,UAAA,iBAAAtC,gBAAA,MAAAkB,MAAA,GAAAvB,QAAA,CAAAgB,MAAA,EAAAmB,QAAA,CAAAzD,QAAA,EAAAmB,OAAA,CAAAK,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,SAAAN,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,EAAAL,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,MAAAyC,IAAA,GAAAvB,MAAA,CAAArB,GAAA,SAAA4C,IAAA,GAAAA,IAAA,CAAAJ,IAAA,IAAA7C,OAAA,CAAAsC,QAAA,CAAAY,UAAA,IAAAD,IAAA,CAAAxE,KAAA,EAAAuB,OAAA,CAAAmD,IAAA,GAAAb,QAAA,CAAAc,OAAA,eAAApD,OAAA,CAAAmB,MAAA,KAAAnB,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,GAAA/C,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,IAAAyC,IAAA,IAAAjD,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,sCAAAhD,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,cAAA6C,aAAAC,IAAA,QAAAC,KAAA,KAAAC,MAAA,EAAAF,IAAA,YAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAC,IAAA,CAAAN,KAAA,cAAAO,cAAAP,KAAA,QAAA7B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,QAAArC,MAAA,CAAApB,IAAA,oBAAAoB,MAAA,CAAArB,GAAA,EAAAkD,KAAA,CAAAQ,UAAA,GAAArC,MAAA,aAAAzB,QAAAN,WAAA,SAAAiE,UAAA,MAAAJ,MAAA,aAAA7D,WAAA,CAAAuB,OAAA,CAAAmC,YAAA,cAAAW,KAAA,iBAAAjD,OAAAkD,QAAA,QAAAA,QAAA,QAAAC,cAAA,GAAAD,QAAA,CAAArF,cAAA,OAAAsF,cAAA,SAAAA,cAAA,CAAA3D,IAAA,CAAA0D,QAAA,4BAAAA,QAAA,CAAAd,IAAA,SAAAc,QAAA,OAAAE,KAAA,CAAAF,QAAA,CAAAG,MAAA,SAAAC,CAAA,OAAAlB,IAAA,YAAAA,KAAA,aAAAkB,CAAA,GAAAJ,QAAA,CAAAG,MAAA,OAAAhG,MAAA,CAAAmC,IAAA,CAAA0D,QAAA,EAAAI,CAAA,UAAAlB,IAAA,CAAA1E,KAAA,GAAAwF,QAAA,CAAAI,CAAA,GAAAlB,IAAA,CAAAN,IAAA,OAAAM,IAAA,SAAAA,IAAA,CAAA1E,KAAA,GAAAsE,SAAA,EAAAI,IAAA,CAAAN,IAAA,OAAAM,IAAA,YAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA,eAAAA,IAAA,EAAAd,UAAA,eAAAA,WAAA,aAAA5D,KAAA,EAAAsE,SAAA,EAAAF,IAAA,iBAAApC,iBAAA,CAAAtC,SAAA,GAAAuC,0BAAA,EAAApC,cAAA,CAAA0C,EAAA,mBAAAvC,KAAA,EAAAiC,0BAAA,EAAAtB,YAAA,SAAAd,cAAA,CAAAoC,0BAAA,mBAAAjC,KAAA,EAAAgC,iBAAA,EAAArB,YAAA,SAAAqB,iBAAA,CAAA6D,WAAA,GAAApF,MAAA,CAAAwB,0BAAA,EAAA1B,iBAAA,wBAAAhB,OAAA,CAAAuG,mBAAA,aAAAC,MAAA,QAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAE,WAAA,WAAAD,IAAA,KAAAA,IAAA,KAAAhE,iBAAA,6BAAAgE,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAAE,IAAA,OAAA3G,OAAA,CAAA4G,IAAA,aAAAJ,MAAA,WAAAtG,MAAA,CAAA2G,cAAA,GAAA3G,MAAA,CAAA2G,cAAA,CAAAL,MAAA,EAAA9D,0BAAA,KAAA8D,MAAA,CAAAM,SAAA,GAAApE,0BAAA,EAAAxB,MAAA,CAAAsF,MAAA,EAAAxF,iBAAA,yBAAAwF,MAAA,CAAArG,SAAA,GAAAD,MAAA,CAAA6B,MAAA,CAAAiB,EAAA,GAAAwD,MAAA,KAAAxG,OAAA,CAAA+G,KAAA,aAAA1E,GAAA,aAAAwB,OAAA,EAAAxB,GAAA,OAAAY,qBAAA,CAAAI,aAAA,CAAAlD,SAAA,GAAAe,MAAA,CAAAmC,aAAA,CAAAlD,SAAA,EAAAW,mBAAA,iCAAAd,OAAA,CAAAqD,aAAA,GAAAA,aAAA,EAAArD,OAAA,CAAAgH,KAAA,aAAAxF,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAA2B,WAAA,eAAAA,WAAA,KAAAA,WAAA,GAAA2D,OAAA,OAAAC,IAAA,OAAA7D,aAAA,CAAA9B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAA2B,WAAA,UAAAtD,OAAA,CAAAuG,mBAAA,CAAA9E,OAAA,IAAAyF,IAAA,GAAAA,IAAA,CAAA/B,IAAA,GAAArB,IAAA,WAAAH,MAAA,WAAAA,MAAA,CAAAkB,IAAA,GAAAlB,MAAA,CAAAlD,KAAA,GAAAyG,IAAA,CAAA/B,IAAA,WAAAlC,qBAAA,CAAAD,EAAA,GAAA9B,MAAA,CAAA8B,EAAA,EAAAhC,iBAAA,gBAAAE,MAAA,CAAA8B,EAAA,EAAApC,cAAA,iCAAAM,MAAA,CAAA8B,EAAA,6DAAAhD,OAAA,CAAAmH,IAAA,aAAAC,GAAA,QAAAC,MAAA,GAAAnH,MAAA,CAAAkH,GAAA,GAAAD,IAAA,gBAAA5G,GAAA,IAAA8G,MAAA,EAAAF,IAAA,CAAAtB,IAAA,CAAAtF,GAAA,UAAA4G,IAAA,CAAAG,OAAA,aAAAnC,KAAA,WAAAgC,IAAA,CAAAf,MAAA,SAAA7F,GAAA,GAAA4G,IAAA,CAAAI,GAAA,QAAAhH,GAAA,IAAA8G,MAAA,SAAAlC,IAAA,CAAA1E,KAAA,GAAAF,GAAA,EAAA4E,IAAA,CAAAN,IAAA,OAAAM,IAAA,WAAAA,IAAA,CAAAN,IAAA,OAAAM,IAAA,QAAAnF,OAAA,CAAA+C,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAA9B,SAAA,KAAAuG,WAAA,EAAAzE,OAAA,EAAA+D,KAAA,WAAAA,MAAAwB,aAAA,aAAAC,IAAA,WAAAtC,IAAA,WAAAV,IAAA,QAAAC,KAAA,GAAAK,SAAA,OAAAF,IAAA,YAAAP,QAAA,cAAAnB,MAAA,gBAAAd,GAAA,GAAA0C,SAAA,OAAAa,UAAA,CAAA1C,OAAA,CAAA4C,aAAA,IAAA0B,aAAA,WAAAb,IAAA,kBAAAA,IAAA,CAAAe,MAAA,OAAAtH,MAAA,CAAAmC,IAAA,OAAAoE,IAAA,MAAAR,KAAA,EAAAQ,IAAA,CAAAgB,KAAA,cAAAhB,IAAA,IAAA5B,SAAA,MAAA6C,IAAA,WAAAA,KAAA,SAAA/C,IAAA,WAAAgD,UAAA,QAAAjC,UAAA,IAAAG,UAAA,kBAAA8B,UAAA,CAAAvF,IAAA,QAAAuF,UAAA,CAAAxF,GAAA,cAAAyF,IAAA,KAAAnD,iBAAA,WAAAA,kBAAAoD,SAAA,aAAAlD,IAAA,QAAAkD,SAAA,MAAA/F,OAAA,kBAAAgG,OAAAC,GAAA,EAAAC,MAAA,WAAAxE,MAAA,CAAApB,IAAA,YAAAoB,MAAA,CAAArB,GAAA,GAAA0F,SAAA,EAAA/F,OAAA,CAAAmD,IAAA,GAAA8C,GAAA,EAAAC,MAAA,KAAAlG,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,KAAAmD,MAAA,aAAA7B,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,GAAA3C,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,iBAAAR,KAAA,CAAAC,MAAA,SAAAwC,MAAA,aAAAzC,KAAA,CAAAC,MAAA,SAAAiC,IAAA,QAAAU,QAAA,GAAA/H,MAAA,CAAAmC,IAAA,CAAAgD,KAAA,eAAA6C,UAAA,GAAAhI,MAAA,CAAAmC,IAAA,CAAAgD,KAAA,qBAAA4C,QAAA,IAAAC,UAAA,aAAAX,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,gBAAAgC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,cAAAyC,QAAA,aAAAV,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,qBAAA2C,UAAA,YAAAhE,KAAA,qDAAAqD,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,YAAAd,MAAA,WAAAA,OAAAtC,IAAA,EAAAD,GAAA,aAAAgE,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,SAAAiC,IAAA,IAAArH,MAAA,CAAAmC,IAAA,CAAAgD,KAAA,wBAAAkC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,QAAA2C,YAAA,GAAA9C,KAAA,aAAA8C,YAAA,iBAAA/F,IAAA,mBAAAA,IAAA,KAAA+F,YAAA,CAAA7C,MAAA,IAAAnD,GAAA,IAAAA,GAAA,IAAAgG,YAAA,CAAA3C,UAAA,KAAA2C,YAAA,cAAA3E,MAAA,GAAA2E,YAAA,GAAAA,YAAA,CAAAtC,UAAA,cAAArC,MAAA,CAAApB,IAAA,GAAAA,IAAA,EAAAoB,MAAA,CAAArB,GAAA,GAAAA,GAAA,EAAAgG,YAAA,SAAAlF,MAAA,gBAAAgC,IAAA,GAAAkD,YAAA,CAAA3C,UAAA,EAAAlD,gBAAA,SAAA8F,QAAA,CAAA5E,MAAA,MAAA4E,QAAA,WAAAA,SAAA5E,MAAA,EAAAiC,QAAA,oBAAAjC,MAAA,CAAApB,IAAA,QAAAoB,MAAA,CAAArB,GAAA,qBAAAqB,MAAA,CAAApB,IAAA,mBAAAoB,MAAA,CAAApB,IAAA,QAAA6C,IAAA,GAAAzB,MAAA,CAAArB,GAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAwF,IAAA,QAAAzF,GAAA,GAAAqB,MAAA,CAAArB,GAAA,OAAAc,MAAA,kBAAAgC,IAAA,yBAAAzB,MAAA,CAAApB,IAAA,IAAAqD,QAAA,UAAAR,IAAA,GAAAQ,QAAA,GAAAnD,gBAAA,KAAA+F,MAAA,WAAAA,OAAA7C,UAAA,aAAAW,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAA4C,QAAA,CAAA/C,KAAA,CAAAQ,UAAA,EAAAR,KAAA,CAAAI,QAAA,GAAAG,aAAA,CAAAP,KAAA,GAAA/C,gBAAA,yBAAAgG,OAAAhD,MAAA,aAAAa,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,KAAAA,MAAA,QAAA9B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,kBAAArC,MAAA,CAAApB,IAAA,QAAAmG,MAAA,GAAA/E,MAAA,CAAArB,GAAA,EAAAyD,aAAA,CAAAP,KAAA,YAAAkD,MAAA,gBAAArE,KAAA,8BAAAsE,aAAA,WAAAA,cAAAzC,QAAA,EAAAf,UAAA,EAAAE,OAAA,gBAAAd,QAAA,KAAAzD,QAAA,EAAAkC,MAAA,CAAAkD,QAAA,GAAAf,UAAA,EAAAA,UAAA,EAAAE,OAAA,EAAAA,OAAA,oBAAAjC,MAAA,UAAAd,GAAA,GAAA0C,SAAA,GAAAvC,gBAAA,OAAAxC,OAAA;AAAA,SAAA2I,mBAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,EAAAvI,GAAA,EAAA8B,GAAA,cAAA4C,IAAA,GAAA2D,GAAA,CAAArI,GAAA,EAAA8B,GAAA,OAAA5B,KAAA,GAAAwE,IAAA,CAAAxE,KAAA,WAAAuD,KAAA,IAAAP,MAAA,CAAAO,KAAA,iBAAAiB,IAAA,CAAAJ,IAAA,IAAArB,OAAA,CAAA/C,KAAA,YAAAwG,OAAA,CAAAzD,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,CAAA+E,KAAA,EAAAC,MAAA;AAAA,SAAAC,kBAAA3G,EAAA,6BAAAV,IAAA,SAAAsH,IAAA,GAAAC,SAAA,aAAAhC,OAAA,WAAAzD,OAAA,EAAAC,MAAA,QAAAmF,GAAA,GAAAxG,EAAA,CAAA8G,KAAA,CAAAxH,IAAA,EAAAsH,IAAA,YAAAH,MAAApI,KAAA,IAAAkI,kBAAA,CAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,UAAArI,KAAA,cAAAqI,OAAAxH,GAAA,IAAAqH,kBAAA,CAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,WAAAxH,GAAA,KAAAuH,KAAA,CAAA9D,SAAA,YADA;AAMA,IAAMoE,GAAG,GAAG,IAAAC,mBAAO,EAAC,CAAC;AACrB,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrC,IAAMG,OAAO,GAAG,kCAAkC;AAClD,IAAMC,cAAc,GAAG,EAAE,CAAC,CAAC;AAC3B,IAAMC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;;AAElB,IAAMC,OAAO,GAAG,IAAAC,2BAAS,EAAC;EACxBC,QAAQ,EAAE,IAAI;EAAE;EAChBC,GAAG,EAAE,IAAI,CAAE;AACb,CAAC,CAAC;;AAEFX,GAAG,CAACY,GAAG,CAACJ,OAAO,CAAC;AAChBR,GAAG,CAACY,GAAG,CAACX,mBAAO,CAACY,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAC,oBAAQ,CAACC,OAAO,CAAC,qCAAqC,EAAE;EACtDC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,IAAMC,WAAW,GAAG,IAAIJ,oBAAQ,CAACK,MAAM,CAAC;EACtCC,OAAO,EAAE;IAAEjI,IAAI,EAAEkI,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACzCC,KAAK,EAAE;IAAEpI,IAAI,EAAEqI,MAAM;IAAEF,QAAQ,EAAE;EAAK,CAAC;EACvCG,UAAU,EAAE;IAAEtI,IAAI,EAAEqI,MAAM;IAAEF,QAAQ,EAAE;EAAK,CAAC;EAC5CI,WAAW,EAAE;IAAEvI,IAAI,EAAEwI,IAAI;IAAEL,QAAQ,EAAE;EAAK,CAAC;EAC3CM,SAAS,EAAE;IAAEzI,IAAI,EAAEwI,IAAI;IAAE,WAASA,IAAI,CAACE;EAAI,CAAC;EAC5CC,SAAS,EAAE;IAAE3I,IAAI,EAAEwI,IAAI;IAAE,WAASA,IAAI,CAACE;EAAI;AAC7C,CAAC,CAAC;;AAEF;AACA,IAAME,KAAK,GAAGjB,oBAAQ,CAACkB,KAAK,CAAC,OAAO,EAAEd,WAAW,CAAC;AAElDlB,GAAG,CAACiC,GAAG,CAAC,GAAG,EAAE,UAACC,GAAG,EAAEC,GAAG,EAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,wBAAwB,CAAC;AACpC,CAAC,CAAC;;AAEF;;AAEApC,GAAG,CAACiC,GAAG,CAAC,SAAS;EAAA,IAAAI,IAAA,GAAAzC,iBAAA,eAAAhJ,mBAAA,GAAA6G,IAAA,CAAE,SAAA6E,QAAOJ,GAAG,EAAEC,GAAG;IAAA,IAAAI,UAAA,EAAAC,iBAAA,EAAAC,MAAA,EAAAC,gBAAA,EAAAC,KAAA,EAAAC,eAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,WAAA,EAAAC,UAAA;IAAA,OAAAvM,mBAAA,GAAAwB,IAAA,UAAAgL,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAA/E,IAAA,GAAA+E,QAAA,CAAArH,IAAA;QAAA;UAAAuG,UAAA,GAI5BL,GAAG,CAACY,KAAK,EAAAN,iBAAA,GAAAD,UAAA,CADXE,MAAM,EAANA,MAAM,GAAAD,iBAAA,cAAG,CAAC,GAAAA,iBAAA,EAAAE,gBAAA,GAAAH,UAAA,CAAEI,KAAK,EAALA,KAAK,GAAAD,gBAAA,cAAG,EAAE,GAAAA,gBAAA,EAAAE,eAAA,GAAAL,UAAA,CAAEM,IAAI,EAAJA,IAAI,GAAAD,eAAA,cAAG,iBAAiB,GAAAA,eAAA,EAAEE,KAAK,GAAAP,UAAA,CAALO,KAAK,EAGzD;UACAL,MAAM,GAAGa,QAAQ,CAACb,MAAM,EAAE,EAAE,CAAC;UAC7BE,KAAK,GAAGW,QAAQ,CAACX,KAAK,EAAE,EAAE,CAAC;;UAE3B;UACMI,QAAQ,MAAAQ,MAAA,CAAMd,MAAM,OAAAc,MAAA,CAAIZ,KAAK,OAAAY,MAAA,CAAIV,IAAI,OAAAU,MAAA,CAAIT,KAAK,GAEpD;UACME,UAAU,GAAG,CAACP,MAAM,GAAG,CAAC,IAAIE,KAAK;UACjCM,QAAQ,GAAGR,MAAM,GAAGE,KAAK;UAEzBO,WAAW,GAAG;YAClBM,OAAO,EAAEnD,OAAO;YAChBoD,IAAI,EAAEhB,MAAM;YACZiB,OAAO,EAAEb,IAAI;YACbc,aAAa,EAAE,KAAK;YACpBC,aAAa,EAAE;UACjB,CAAC;UAED,IAAId,KAAK,EAAE;YACTI,WAAW,CAACJ,KAAK,GAAGA,KAAK;UAC3B;UAAC,MAEGvC,KAAK,CAACwC,QAAQ,CAAC,IAAIxC,KAAK,CAACwC,QAAQ,CAAC,CAACc,MAAM,GAAGlC,IAAI,CAACE,GAAG,CAAC,CAAC;YAAAwB,QAAA,CAAArH,IAAA;YAAA;UAAA;UAClDmH,UAAU,GAAG5C,KAAK,CAACwC,QAAQ,CAAC,CAACe,IAAI;UACvC3B,GAAG,CAACtB,IAAI,CAACsC,UAAU,CAAC;UAACE,QAAA,CAAArH,IAAA;UAAA;QAAA;UAAAqH,QAAA,CAAArH,IAAA;UAAA,OAEf+H,iBAAK,CACR9B,GAAG,CAAC,6CAA6C,EAAE;YAAE+B,MAAM,EAAEd;UAAY,CAAC,CAAC,CAC3EvI,IAAI,CAAC,UAACsJ,QAAQ,EAAK;YAClB,IAAMC,MAAM,GAAGD,QAAQ,CAACH,IAAI,CAACK,OAAO,CAAC3F,KAAK,CAACwE,UAAU,EAAEC,QAAQ,CAAC,CAACmB,GAAG,CAAC,UAACC,KAAK;cAAA,OAAM;gBAC/EC,EAAE,EAAED,KAAK,CAACC,EAAE;gBACZ/C,KAAK,EAAE8C,KAAK,CAAC9C,KAAK;gBAClBgD,WAAW,EAAEF,KAAK,CAACE,WAAW;gBAC9BC,YAAY,EAAEH,KAAK,CAACG,YAAY;gBAChCC,YAAY,EAAEJ,KAAK,CAACI;cACtB,CAAC;YAAA,CAAC,CAAC;;YAEH;YACAlE,KAAK,CAACwC,QAAQ,CAAC,GAAG;cAChBe,IAAI,EAAEI,MAAM;cACZL,MAAM,EAAElC,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGvB,cAAc,GAAG;YACxC,CAAC;YAED6B,GAAG,CAACtB,IAAI,CAACqD,MAAM,CAAC;UAClB,CAAC,CAAC,SACI,CAAC,UAACrJ,KAAK,EAAK;YAChB6J,OAAO,CAAC7J,KAAK,CAACA,KAAK,CAAC;YACpBsH,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;cAAEhG,KAAK,EAAE;YAAwB,CAAC,CAAC;UAC1D,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAwI,QAAA,CAAA5E,IAAA;MAAA;IAAA,GAAA6D,OAAA;EAAA,CAEP;EAAA,iBAAAsC,EAAA,EAAAC,GAAA;IAAA,OAAAxC,IAAA,CAAAtC,KAAA,OAAAD,SAAA;EAAA;AAAA,IAAC;;AAEF;;AAEAE,GAAG,CAACiC,GAAG,CAAC,aAAa;EAAA,IAAA6C,KAAA,GAAAlF,iBAAA,eAAAhJ,mBAAA,GAAA6G,IAAA,CAAE,SAAAsH,SAAO7C,GAAG,EAAEC,GAAG;IAAA,IAAAf,OAAA,EAAA+B,UAAA;IAAA,OAAAvM,mBAAA,GAAAwB,IAAA,UAAA4M,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA3G,IAAA,GAAA2G,SAAA,CAAAjJ,IAAA;QAAA;UAC9BoF,OAAO,GAAGc,GAAG,CAAC8B,MAAM,CAACM,EAAE,EAE7B;UAAA,MACI/D,KAAK,CAACa,OAAO,CAAC,IAAIb,KAAK,CAACa,OAAO,CAAC,CAACyC,MAAM,GAAGlC,IAAI,CAACE,GAAG,CAAC,CAAC;YAAAoD,SAAA,CAAAjJ,IAAA;YAAA;UAAA;UAChDmH,UAAU,GAAG5C,KAAK,CAACa,OAAO,CAAC,CAAC0C,IAAI;UACtC3B,GAAG,CAACtB,IAAI,CAACsC,UAAU,CAAC;UAAC8B,SAAA,CAAAjJ,IAAA;UAAA;QAAA;UAAAiJ,SAAA,CAAAjJ,IAAA;UAAA,OAEf+H,iBAAK,CACR9B,GAAG,uCAAAsB,MAAA,CAAuCnC,OAAO,GAAI;YACpD4C,MAAM,EAAE;cACNR,OAAO,EAAEnD;YACX;UACF,CAAC,CAAC,CACD1F,IAAI,CAAC,UAACsJ,QAAQ,EAAK;YAClB,IAAMI,KAAK,GAAGJ,QAAQ,CAACH,IAAI;YAC3B;YACAvD,KAAK,CAACa,OAAO,CAAC,GAAG;cACf0C,IAAI,EAAEO,KAAK;cACXR,MAAM,EAAElC,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGvB,cAAc,GAAG;YACxC,CAAC;YACD6B,GAAG,CAACtB,IAAI,CAACwD,KAAK,CAAC;UACjB,CAAC,CAAC,SACI,CAAC,UAACxJ,KAAK,EAAK;YAChB6J,OAAO,CAAC7J,KAAK,CAACA,KAAK,CAAC;YACpBsH,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;cAAEhG,KAAK,EAAE;YAAwB,CAAC,CAAC;UAC1D,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAoK,SAAA,CAAAxG,IAAA;MAAA;IAAA,GAAAsG,QAAA;EAAA,CAEP;EAAA,iBAAAG,GAAA,EAAAC,GAAA;IAAA,OAAAL,KAAA,CAAA/E,KAAA,OAAAD,SAAA;EAAA;AAAA,IAAC;;AAEF;;AAEA;AACAE,GAAG,CAACiC,GAAG,CAAC,YAAY;EAAA,IAAAmD,KAAA,GAAAxF,iBAAA,eAAAhJ,mBAAA,GAAA6G,IAAA,CAAE,SAAA4H,SAAOnD,GAAG,EAAEC,GAAG;IAAA,OAAAvL,mBAAA,GAAAwB,IAAA,UAAAkN,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAjH,IAAA,GAAAiH,SAAA,CAAAvJ,IAAA;QAAA;UAAAuJ,SAAA,CAAAvJ,IAAA;UAAA,OAC7B+F,KAAK,CAACyD,IAAI,CAAC,CAAC,CACf3C,IAAI,CAAC;YAAEjB,SAAS,EAAE,CAAC;UAAE,CAAC;UACvB;UAAA,CACC6D,IAAI,CAAC,UAACtN,GAAG,EAAE+L,MAAM,EAAK;YACrB,IAAI/L,GAAG,EAAE;cACPuM,OAAO,CAAC7J,KAAK,CAAC1C,GAAG,CAAC;cAClB,OAAOgK,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;gBAAEhG,KAAK,EAAE;cAAwB,CAAC,CAAC;YACjE;YACAsH,GAAG,CAACtB,IAAI,CAACqD,MAAM,CAAC;UAClB,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAqB,SAAA,CAAA9G,IAAA;MAAA;IAAA,GAAA4G,QAAA;EAAA,CACL;EAAA,iBAAAK,GAAA,EAAAC,GAAA;IAAA,OAAAP,KAAA,CAAArF,KAAA,OAAAD,SAAA;EAAA;AAAA,IAAC;;AAEF;AACAE,GAAG,CAAC4F,IAAI,CAAC,YAAY;EAAA,IAAAC,KAAA,GAAAjG,iBAAA,eAAAhJ,mBAAA,GAAA6G,IAAA,CAAE,SAAAqI,SAAO5D,GAAG,EAAEC,GAAG;IAAA,IAAA4D,SAAA,EAAA3E,OAAA,EAAAG,KAAA,EAAAE,UAAA,EAAAC,WAAA,EAAA2C,KAAA;IAAA,OAAAzN,mBAAA,GAAAwB,IAAA,UAAA4N,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA3H,IAAA,GAAA2H,SAAA,CAAAjK,IAAA;QAAA;UAAA+J,SAAA,GAGhC7D,GAAG,CAACgE,IAAI,EADV9E,OAAO,GAAA2E,SAAA,CAAP3E,OAAO,EAAEG,KAAK,GAAAwE,SAAA,CAALxE,KAAK,EAAEE,UAAU,GAAAsE,SAAA,CAAVtE,UAAU,EAAEC,WAAW,GAAAqE,SAAA,CAAXrE,WAAW;UAGnC2C,KAAK,GAAG,IAAItC,KAAK,CAAC;YACtBX,OAAO,EAAPA,OAAO;YACPG,KAAK,EAALA,KAAK;YACLE,UAAU,EAAVA,UAAU;YACVC,WAAW,EAAXA;UACF,CAAC,CAAC,EAEF;UAAAuE,SAAA,CAAAjK,IAAA;UAAA,OACMqI,KAAK,CAAC8B,IAAI,CAAC,UAAChO,GAAG,EAAEiO,UAAU,EAAK;YACpC,IAAIjO,GAAG,EAAE;cACPuM,OAAO,CAAC7J,KAAK,CAAC1C,GAAG,CAAC;cAClB,OAAOgK,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;gBAAEhG,KAAK,EAAE;cAAwB,CAAC,CAAC;YACjE;YACAsH,GAAG,CAACtB,IAAI,CAACuF,UAAU,CAAC;UACtB,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAH,SAAA,CAAAxH,IAAA;MAAA;IAAA,GAAAqH,QAAA;EAAA,CACH;EAAA,iBAAAO,GAAA,EAAAC,GAAA;IAAA,OAAAT,KAAA,CAAA9F,KAAA,OAAAD,SAAA;EAAA;AAAA,IAAC;;AAEF;AACAE,GAAG,CAACuG,GAAG,CAAC,gBAAgB;EAAA,IAAAC,KAAA,GAAA5G,iBAAA,eAAAhJ,mBAAA,GAAA6G,IAAA,CAAE,SAAAgJ,SAAOvE,GAAG,EAAEC,GAAG;IAAA,IAAAf,OAAA,EAAAsF,UAAA,EAAAnF,KAAA,EAAAE,UAAA,EAAAC,WAAA;IAAA,OAAA9K,mBAAA,GAAAwB,IAAA,UAAAuO,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAtI,IAAA,GAAAsI,SAAA,CAAA5K,IAAA;QAAA;UACjCoF,OAAO,GAAGc,GAAG,CAAC8B,MAAM,CAACM,EAAE;UAAAoC,UAAA,GACcxE,GAAG,CAACgE,IAAI,EAA3C3E,KAAK,GAAAmF,UAAA,CAALnF,KAAK,EAAEE,UAAU,GAAAiF,UAAA,CAAVjF,UAAU,EAAEC,WAAW,GAAAgF,UAAA,CAAXhF,WAAW;UAEtCK,KAAK,CAAC8E,gBAAgB,CACpB;YAAEzF,OAAO,EAAPA;UAAQ,CAAC,EACX;YACEG,KAAK,EAALA,KAAK;YAAEE,UAAU,EAAVA,UAAU;YAAEC,WAAW,EAAXA,WAAW;YAAEI,SAAS,EAAEH,IAAI,CAACE,GAAG,CAAC;UACtD,CAAC,EACD;YAAE,OAAK;UAAK,CAAC;UACb;UACA,UAAC1J,GAAG,EAAE2O,YAAY,EAAK;YACrB,IAAI3O,GAAG,EAAE;cACPuM,OAAO,CAAC7J,KAAK,CAAC1C,GAAG,CAAC;cAClB,OAAOgK,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;gBAAEhG,KAAK,EAAE;cAAwB,CAAC,CAAC;YACjE;YACA,IAAI,CAACiM,YAAY,EAAE;cACjB,OAAO3E,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;gBAAEhG,KAAK,EAAE;cAAkB,CAAC,CAAC;YAC3D;YACAsH,GAAG,CAACtB,IAAI,CAACiG,YAAY,CAAC;UACxB,CACF,CAAC;QAAC;QAAA;UAAA,OAAAF,SAAA,CAAAnI,IAAA;MAAA;IAAA,GAAAgI,QAAA;EAAA,CACH;EAAA,iBAAAM,GAAA,EAAAC,IAAA;IAAA,OAAAR,KAAA,CAAAzG,KAAA,OAAAD,SAAA;EAAA;AAAA,IAAC;;AAEF;AACAE,GAAG,UAAO,CAAC,gBAAgB;EAAA,IAAAiH,KAAA,GAAArH,iBAAA,eAAAhJ,mBAAA,GAAA6G,IAAA,CAAE,SAAAyJ,SAAOhF,GAAG,EAAEC,GAAG;IAAA,IAAAf,OAAA;IAAA,OAAAxK,mBAAA,GAAAwB,IAAA,UAAA+O,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA9I,IAAA,GAAA8I,SAAA,CAAApL,IAAA;QAAA;UACpCoF,OAAO,GAAGc,GAAG,CAAC8B,MAAM,CAACM,EAAE,EAE7B;UACAvC,KAAK,CAACsF,gBAAgB,CAAC;YAAEjG,OAAO,EAAPA;UAAQ,CAAC,EAAE,UAACjJ,GAAG,EAAEmP,YAAY,EAAK;YACzD,IAAInP,GAAG,EAAE;cACPuM,OAAO,CAAC7J,KAAK,CAAC1C,GAAG,CAAC;cAClB,OAAOgK,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;gBAAEhG,KAAK,EAAE;cAAwB,CAAC,CAAC;YACjE;YACA,IAAI,CAACyM,YAAY,EAAE;cACjB,OAAOnF,GAAG,CAACwC,MAAM,CAAC,GAAG,CAAC,CAAC9D,IAAI,CAAC;gBAAEhG,KAAK,EAAE;cAAkB,CAAC,CAAC;YAC3D;YACAsH,GAAG,CAACtB,IAAI,CAAC;cAAE0G,OAAO,EAAE;YAA6B,CAAC,CAAC;UACrD,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAH,SAAA,CAAA3I,IAAA;MAAA;IAAA,GAAAyI,QAAA;EAAA,CACJ;EAAA,iBAAAM,IAAA,EAAAC,IAAA;IAAA,OAAAR,KAAA,CAAAlH,KAAA,OAAAD,SAAA;EAAA;AAAA,IAAC;AAEF,IAAM4H,MAAM,GAAG1H,GAAG,CAAC2H,MAAM,CAACzH,IAAI,EAAE,YAAM;EACpC,IAAM0H,IAAI,GAAGF,MAAM,CAACG,OAAO,CAAC,CAAC,CAACA,OAAO;EACrC,IAAAC,eAAA,GAAiBJ,MAAM,CAACG,OAAO,CAAC,CAAC;IAAzBE,IAAI,GAAAD,eAAA,CAAJC,IAAI;EAEZrD,OAAO,CAACsD,GAAG,CAAC,+BAA+B,EAAEJ,IAAI,EAAEG,IAAI,CAAC;AAC1D,CAAC,CAAC;AACFE,MAAM,CAACpR,OAAO,GAAG6Q,MAAM"}},"mtime":1685685265099}}